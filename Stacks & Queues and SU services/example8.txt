If you want to open a service (function) defining file,
then press (Y/y) for 'yes', otherwise press any single key
y
Enter the input file name: input1.txt
Do you want to open another service defining file?
Press (Y/y) for 'yes', otherwise press anykey
y
Enter the input file name: input2.txt
Do you want to open another service defining file?
Press (Y/y) for 'yes', otherwise press anykey
y
Enter the input file name: input3.txt
Do you want to open another service defining file?
Press (Y/y) for 'yes', otherwise press anykey
n
------------------------------------------------------------------
PRINTING AVAILABLE SERVICES (FUNCTIONS) TO BE CHOSEN FROM THE USERS
------------------------------------------------------------------


function_1:
print stack;, define x;, define y;, print stack;, call function_2;, print stack;, define z;, print stack;, call function_3;, print stack;, define c;, define b;, print stack.

function_2:
print stack;, define a;, define b;, print stack;, call function_3;, print stack;, define x;, define y;, define z;, print stack;, call function_3;, print stack;, define c;, print stack.

function_3:
print stack;, define a;, define x;, define z;, print stack;, define c;, print stack.

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in1
Give instructor's ID (an int): 1
Prof. in1's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in2
Give instructor's ID (an int): 2
Prof. in2's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in3
Give instructor's ID (an int): 3
Prof. in3's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in4
Give instructor's ID (an int): 4
Prof. in4's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in5
Give instructor's ID (an int): 5
Prof. in5's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_1
Give instructor's name: in6
Give instructor's ID (an int): 6
Prof. in6's service request of function_1
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 2
Add a service (function) that the student wants to use:
function_2
Give student's name: st1
Give student's ID (an int): 20001
st1's service request of function_2 has been put in the student's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in7
Give instructor's ID (an int): 7
Prof. in7's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in8
Give instructor's ID (an int): 8
Prof. in8's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 2
Add a service (function) that the student wants to use:
function_1
Give student's name: st2
Give student's ID (an int): 20002
st2's service request of function_1 has been put in the student's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_2
Give instructor's name: in9
Give instructor's ID (an int): 9
Prof. in9's service request of function_2
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in10
Give instructor's ID (an int): 10
Prof. in10's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in11
Give instructor's ID (an int): 11
Prof. in11's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 2
Add a service (function) that the student wants to use:
function_3
Give student's name: st3
Give student's ID (an int): 3
st3's service request of function_3 has been put in the student's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_3
Give instructor's name: in12
Give instructor's ID (an int): 12
Prof. in12's service request of function_3
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 1
Add a service (function) that the instructor wants to use:
function_1
Give instructor's name: in13
Give instructor's ID (an int): 13
Prof. in13's service request of function_1
has been put in the instructor's queue.
Waiting to be served...

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 4
Name: in1 ID: 1 0 TRY
Name: in2 ID: 2 0 TRY
Name: in3 ID: 3 0 TRY
Name: in4 ID: 4 0 TRY
Name: in5 ID: 5 0 TRY
Name: in6 ID: 6 0 TRY
Name: st1 ID: 20001 0 TRY
Name: in7 ID: 7 0 TRY
Name: in8 ID: 8 0 TRY
Name: st2 ID: 20002 0 TRY
Name: in9 ID: 9 0 TRY
Name: in10 ID: 10 0 TRY
Name: in11 ID: 11 0 TRY
Name: st3 ID: 3 0 TRY
Name: in12 ID: 12 0 TRY
Name: in13 ID: 13 0 TRY

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in1's request (with ID 1) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in2's request (with ID 2) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in3's request (with ID 3) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in4's request (with ID 4) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in5's request (with ID 5) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in6's request (with ID 6) of service (function):
function_1
-------------------------------------------------------
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Calling function_2 from function_1
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_2: define c;
function_2 is finished. Clearing the stack from it's data...
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Calling function_3 from function_1
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Executing print stack command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_1: define c;
function_1: define b;
function_1 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in7's request (with ID 7) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in8's request (with ID 8) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in9's request (with ID 9) of service (function):
function_2
-------------------------------------------------------
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_2: define c;
function_2 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in10's request (with ID 10) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
10 instructors are served. Taking 1 student from the queue...
Processing st1's request (with ID 20001) of service (function):
function_2
-------------------------------------------------------
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack command from function_2
PRINTING THE STACK TRACE:
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_2: define c;
function_2 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in11's request (with ID 11) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in12's request (with ID 12) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Processing instructors queue...
Processing prof.in13's request (with ID 13) of service (function):
function_1
-------------------------------------------------------
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Calling function_2 from function_1
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_2: define c;
function_2 is finished. Clearing the stack from it's data...
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Calling function_3 from function_1
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Executing print stack command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_1: define c;
function_1: define b;
function_1 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Instructors queue is empty. Proceeding with students queue...
Processing st2's request (with ID 20002) of service (function):
function_1
-------------------------------------------------------
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Calling function_2 from function_1
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Calling function_3 from function_2
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
Executing print stack command from function_2
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_2: define a;
function_2: define b;
function_2: define x;
function_2: define y;
function_2: define z;
function_2: define c;
function_2 is finished. Clearing the stack from it's data...
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Calling function_3 from function_1
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
Executing print stack; command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
Executing print stack command from function_1
PRINTING THE STACK TRACE:
function_1: define x;
function_1: define y;
function_1: define z;
function_1: define c;
function_1: define b;
function_1 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Instructors queue is empty. Proceeding with students queue...
Processing st3's request (with ID 3) of service (function):
function_3
-------------------------------------------------------
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
The stack is empty
Executing print stack; command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
Executing print stack command from function_3
PRINTING THE STACK TRACE:
function_3: define a;
function_3: define x;
function_3: define z;
function_3: define c;
function_3 is finished. Clearing the stack from it's data...
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 3
Both instructor's and student's queue is empty.
No request is processed.
GOING BACK TO MAIN MENU

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 4
Name: in1 ID: 1 10 TRY
Name: in2 ID: 2 10 TRY
Name: in3 ID: 3 10 TRY
Name: in4 ID: 4 10 TRY
Name: in5 ID: 5 10 TRY
Name: in6 ID: 6 85 TRY
Name: st1 ID: 20001 48 TRY
Name: in7 ID: 7 10 TRY
Name: in8 ID: 8 10 TRY
Name: st2 ID: 20002 85 TRY
Name: in9 ID: 9 48 TRY
Name: in10 ID: 10 10 TRY
Name: in11 ID: 11 10 TRY
Name: st3 ID: 3 10 TRY
Name: in12 ID: 12 10 TRY
Name: in13 ID: 13 85 TRY

**********************************************************************
**************** 0 - EXIT PROGRAM                        *************
**************** 1 - ADD AN INSTRUCTOR SERVICE REQUEST   *************
**************** 2 - ADD A STUDENT SERVICE REQUEST       *************
**************** 3 - SERVE (PROCESS) A REQUEST           *************
**************** 4 - DISPLAY USER PAYMENTS               *************
**********************************************************************

Pick an option from above (int number from 0 to 3): 0
PROGRAM EXITING ... 